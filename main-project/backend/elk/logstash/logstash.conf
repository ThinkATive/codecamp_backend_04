input {
    jdbc {
        ####### 1단계 방식 ######## => 매번 똑같은 데이터를 계속 가지고옴
        # jdbc_driver_library => '/usr/share/logstash/mysql-connector-java-8.0.28.jar'
        # jdbc_driver_class => 'com.mysql.cj.jdbc.Driver'
        # jdbc_connection_string => 'jdbc:mysql://my-database:3306/mydocker04'
        # jdbc_user => 'root'
        # jdbc_password => 'root'
        # schedule => '* * * * *' # 분 시 일 월 요일
        # statement => 'select * from product'

        ####### 2단계 방식 ########
        # jdbc_driver_library => '/usr/share/logstash/mysql-connector-java-8.0.28.jar'
        # jdbc_driver_class => 'com.mysql.cj.jdbc.Driver'
        # jdbc_connection_string => 'jdbc:mysql://my-database:3306/mydocker04'
        # jdbc_user => 'root'
        # jdbc_password => 'root'
        # schedule => '* * * * *' # 분 시 일 월 요일
        # use_column_value => true
        # tracking_column => 'updatedat'
        # tracking_column_type => 'timestamp'
        # last_run_metadata_path => './aaa.txt'
        # statement => 'select id, name, price, updatedat from product where updatedat > :sql_last_value order by updatedat asc'
        
        ####### 3단계 방식 ########
        jdbc_driver_library => '/usr/share/logstash/mysql-connector-java-8.0.28.jar'
        jdbc_driver_class => 'com.mysql.cj.jdbc.Driver'
        jdbc_connection_string => 'jdbc:mysql://my-database:3306/maindocker04'
        jdbc_user => 'root'
        jdbc_password => 'root'
        schedule => '*/30 * * * * *' # 분 시 일 월 요일
        use_column_value => true
        tracking_column => 'updatedat'
        tracking_column_type => 'numeric'
        last_run_metadata_path => './record.txt'
        statement => '
        select id, 
               name, 
               price, 
               description, 
               unix_timestamp(updatedat) as updatedat 
          from product
         where unix_timestamp(updatedat) > :sql_last_value order by updatedat asc'
    }
}

output {
    elasticsearch {
        hosts => 'elasticsearch:9200'
        index => 'myproduct'
        document_id => "%{id}"
        manage_template => true
        template => "/usr/share/logstash/auto-complete-template.json"
        template_name => "product"
        template_overwrite => true
    }
}